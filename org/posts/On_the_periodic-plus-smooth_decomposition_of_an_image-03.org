# -*- coding: utf-8; fill-column: 79 -*-
#+SETUPFILE: "../include/css-1.org"
#+SETUPFILE: "../include/mathjax.org"
#+TITLE: On the periodic-plus-smooth decomposition of an image, part 3: the energy as a quadratic form
#+DATE: [2018-01-15 Mon]
#+LINK: moisan2011   https://doi.org/10.1007/s10851-010-0227-1
#+LINK: sb-blog-prev ./On_the_periodic-plus-smooth_decomposition_of_an_image-02.org
#+LINK: sb-blog-next ./On_the_periodic-plus-smooth_decomposition_of_an_image-04.org
#+LINK: sb-blog-data-dir ./On_the_periodic-plus-smooth_decomposition_of_an_image/
#+PROPERTY: header-args:ipython :session :eval no-export :exports both

In the [[sb-blog-prev:][previous instalment]] of this series, we introduced the
periodic-plus-smooth decomposition of an image as a pair of images which
minimizes an energy functional. Observing that this energy is a quadratic form,
the purpose of this post is to derive closed form expressions of the underlying
linear operators. These expressions will then be combined in the next
instalments to a conjugate gradient algorithm in order to minimize the energy
of the periodic-plus-smooth decomposition.

In this post, it will be convenient to regard images as vectors. Given two
$m\times n$ images $u$ and $v$, the scalar product $\langle u, v\rangle$ is
then defined as
\begin{equation*}
\langle u, v\rangle=\sum_{i=0}^{m-1}\sum_{j=0}^{n-1}u_{ij}v_{ij}.
\end{equation*}

Likewise, a linear operator $A$ over the space of $m\times n$ images is defined
as follows
\begin{equation*}
v=A\cdot u,\quad\text{with}\quad v_{ij}
=\sum_{k=0}^{m-1}\sum_{l=0}^{n-1}A_{ij,kl}u_{kl}.
\end{equation*}

According to Moisan ([[moisan2011:][2011]]), the total energy $E(p, s)$ of the
periodic-plus-smooth decomposition of an image $u=p+s$ is defined as the sum
$E(p, s)=E_\mathrm p(p)+E'_\mathrm s(s)$ (see [[sb-blog-prev:][previous instalment]]). Our purpose is to derive expressions of the linear operators $Q_1$ and $Q'_2$ such that
\begin{equation*}
E_\mathrm p(p)=\langle p, Q_1\cdot p\rangle
\quad\text{and}\quad
E'_\mathrm s(s)=\langle s, Q'_2\cdot s\rangle.
\end{equation*}

The closed-form expression of $Q_1$ is derived in the [[periodic_contrib][first part]] of this
post. Then, operator $Q'_2$ is derived in the [[smooth_contrib][second part]] of this post.

* Contribution of the periodic component <<periodic_contrib>>

The contribution to the total energy of the periodic component $p$ is defined
by Moisan ([[moisan2011:][2011]]) as follows (see also [[sb-blog-prev:][previous post]])
\begin{equation}
\label{eq:1}
E_\mathrm p(p)=2\sum_{i=0}^{m-1}(p_{i, n-1}-p_{i, 0})^2
+2\sum_{j=0}^{n-1}(p_{m-1, j}-p_{0, j})^2.\\
\end{equation}

In order to transform the first term, we observe that, $u$ and $v$ being two
$m\times n$ images

\begin{equation}
\begin{aligned}[b]
\sum_{i=0}^{m-1}(u_{i, n-1}-u_{i, 0})(v_{i, n-1}-v_{i, 0})
&=\sum_{i=0}^{m-1}u_{i, 0}(v_{i, 0}-v_{i, n-1})
+\sum_{i=0}^{m-1}u_{i, n-1}(v_{i, n-1}-v_{i, 0})\\
&=\tfrac12\langle u, Q_1^\mathrm h\cdot v\rangle,
\end{aligned}
\label{eq:2}
\end{equation}

where we have introduced the linear operator $Q_1^\mathrm h$ defined as follows

\begin{equation}
\tfrac12(Q_1^\mathrm h\cdot u)_{ij}=
\begin{cases}
u_{i, 0}-u_{i, n-1} & \text{if }j=0,\\
u_{i, n-1}-u_{i, 0} & \text{if }j=n-1,\\
0                   & \text{otherwise}.
\end{cases}
\label{eq:3}
\end{equation}

From the left-hand side of Eq. \eqref{eq:2}, the linear operator $Q_1^\mathrm
h$ thus defined is obviously symmetric and positive. Besides, the first term in
Eq.  \eqref{eq:1} reads

\begin{equation*}
2\sum_{i=0}^{m-1}(p_{i, n-1}-p_{i, 0})^2=\langle p, Q_1^\mathrm h\cdot p\rangle.
\end{equation*}

Turning now to the second term in Eq. \eqref{eq:1}, we introduce the symmetric,
positive linear operator $Q_1^\mathrm v$ defined by

\begin{equation}
\tfrac12(Q_1^\mathrm v\cdot u)_{ij}=\begin{cases}
u_{0, j}-u_{m-1, j} & \text{if }i=0,\\
u_{m-1, j}-u_{0, j} & \text{if }i=m-1,\\
0                   & \text{otherwise},
\end{cases}
\label{eq:4}
\end{equation}

so that

\begin{equation*}
2\sum_{j=0}^{n-1}(p_{m-1, j}-p_{0, j})^2=\langle p, Q_1^\mathrm v\cdot p\rangle.
\end{equation*}

Gathering the above results and introducing the symmetric operator
$Q_1=Q_1^\mathrm h+Q_1^\mathrm v$, we finally find that
$E_\mathrm p(p)=\langle p, Q_1\cdot p\rangle$.

* Contribution of the smooth component <<smooth_contrib>>

The contribution to the total energy of the smooth component $s$ is defined by
Moisan ([[moisan2011:][2011]]) as follows (see also [[sb-blog-prev:][previous post]])

\begin{equation}
\label{eq:5}
E_\mathrm s'(s)=2\sum_{i=0}^{m-2}\sum_{j=0}^{n-1}(s_{i+1, j}-s_{i, j})^2
+2\sum_{i=0}^{m-1}\sum_{j=0}^{n-2}(s_{i, j+1}-s_{i, j})^2.
\end{equation}

The total energy is to be minimized over the space of zero-mean images $s$. It
will therefore be convenient to introduce the following modified energy

\begin{equation}
\label{eq:6}
E_\mathrm s(s)=E_\mathrm s'(s)+(\operatorname{mean}s)^2,
\end{equation}

so that $E_\mathrm s(s)=E_\mathrm s'(s)$ at the solution of the minimization
problem. In order to transform the first term in Eq. \eqref{eq:5}, we observe
that, $u$ and $v$ being two $m\times n$ images

\begin{equation}
\begin{aligned}[b]
&\sum_{i=0}^{m-2}\sum_{j=0}^{n-1}(u_{i+1, j}-u_{i, j})(v_{i+1, j}-v_{i, j})\\
={}&\sum_{i=0}^{m-2}\sum_{j=0}^{n-1}u_{i+1, j}(v_{i+1, j}-v_{i, j})
-\sum_{i=0}^{m-2}\sum_{j=0}^{n-1}u_{i, j}(v_{i+1, j}-v_{i, j})\\
={}&\sum_{i=1}^{m-1}\sum_{j=0}^{n-1}u_{i, j}(v_{i, j}-v_{i-1, j})
-\sum_{i=0}^{m-2}\sum_{j=0}^{n-1}u_{i, j}(v_{i+1, j}-v_{i, j})\\
={}&\sum_{i=1}^{m-2}\sum_{j=0}^{n-1}u_{i, j}(2v_{i, j}-v_{i-1, j}-v_{i+1,j})\\
&+\sum_{j=0}^{n-1}u_{m-1, j}(v_{m-1, j}-v_{m-2, j})
+\sum_{j=0}^{n-1}u_{0, j}(v_{0, j}-v_{1, j})\\
={}&\tfrac12\langle u, Q_2^\mathrm h\cdot v\rangle,
\end{aligned}
\label{eq:7}
\end{equation}

where we have introduced the linear operator $Q_2^\mathrm h$ defined as follows

\begin{equation}
\tfrac12(Q_2^\mathrm h\cdot u)_{i,j}=
\begin{cases}
u_{0, j}-u_{1, j}              & \text{if }i=0,\\
u_{m-1, j}-u_{m-2, j}          & \text{if }i=m-1,\\
2u_{i, j}-u_{i-1, j}-u_{i+1,j} & \text{otherwise}.
\end{cases}
\label{eq:8}
\end{equation}

From the left-hand side of Eq. \eqref{eq:7}, the linear operator
$Q_2^\mathrm h$ thus defined is obviously symmetric and positive. Besides, the
first term in Eq. \eqref{eq:5} reads

\begin{equation*}
2\sum_{i=0}^{m-2}\sum_{j=0}^{n-1}(s_{i+1, j}-s_{i, j})^2
=\langle s, Q_2^\mathrm h\cdot s\rangle.
\end{equation*}

Turning now to the second term in Eq. \eqref{eq:5}, we introduce the symmetric,
positive linear operator $Q_2^\mathrm v$ defined by

\begin{equation}
\tfrac12(Q_2^\mathrm v\cdot u)_{i,j}=
\begin{cases}
u_{i, 0}-u_{i, 1}              & \text{if }j=0,\\
u_{i, n-1}-u_{i, n-2}          & \text{if }j=n-1,\\
2u_{i, j}-u_{i, j-1}-u_{i,j+1} & \text{otherwise}.
\end{cases}
\label{eq:9}
\end{equation}

so that

\begin{equation*}
2\sum_{i=0}^{m-1}\sum_{j=0}^{n-2}(s_{i, j+1}-s_{i, j})^2
=\langle s, Q_2^\mathrm v\cdot s\rangle.
\end{equation*}

Finally

\begin{equation}
\begin{aligned}[b]
(\operatorname{mean}u)(\operatorname{mean}v)
&=\frac{\operatorname{mean}v}{mn}\sum_{i=0}^{m-1}\sum_{j=0}^{n-1}u_{i,j}
=\sum_{i=0}^{m-1}\sum_{j=0}^{n-1}u_{i,j}\times\frac{\operatorname{mean}v}{mn}
=\langle u, Q_2^\mathrm m\cdot v\rangle,
\end{aligned}
\label{eq:10}
\end{equation}

where we have introduced the symmetric, positive operator $Q_2^\mathrm m$
defined as follows

\begin{equation}
(Q_2^\mathrm m\cdot u)_{i,j}=\frac{\operatorname{mean} u}{mn}
=\frac1{m^2n^2}\sum_{i=0}^{m-1}\sum_{j=0}^{n-1}u_{i,j}.
\label{eq:11}
\end{equation}

Gathering the above results and introducing the symmetric, positive operator
$Q_2=Q_2^\mathrm h+Q_2^\mathrm v+Q_2^\mathrm m$, we finally find that
$E_\mathrm s(s)=\langle s, Q_2\cdot s\rangle$.

* Conclusion

In this post, we have defined two linear operators, namely $Q_1$ and $Q_2$,
that operate on the space of $m\times n$ images, and such that the total energy
of the $(p, s)$ pair is given by

\begin{equation*}
E_\mathrm p(p)+E_\mathrm s(s)
=\langle p, Q_1\cdot p\rangle+\langle s, Q_2\cdot s\rangle.
\end{equation*}

In the [[sb-blog-next:][next instalment]] of this series, we will proceed to implement $Q_1$ and
$Q_2$ in Python. To do so, we will adopt a [[https://en.wikipedia.org/wiki/Matrix-free_methods][matrix-free]] approach.
