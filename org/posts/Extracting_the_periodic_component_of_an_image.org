# -*- coding: utf-8; -*-
#+SETUPFILE: "../include/css-1.org"
#+TITLE: Extracting the periodic component of an image
#+DATE: [2017-09-23 Sat]
#+PROPERTY: header-args:ipython :session :eval no-export :exports both

In this new series, we will explore the so-called
/periodic-plus-smooth/ decomposition of an image, introduced by Moisan
in 2011. This series is largely based on Moisan's paper, called
[[https://doi.org/10.1007/s10851-010-0227-1][Periodic plus Smooth Image Decomposition]] (the author's version can be
found on [[https://hal.archives-ouvertes.fr/hal-00388020][HAL]]). Besides introducing a quite smart technique (that I do
use for real materials science applications), this series will be an
opportunity to discuss an important topic: how to test the
implementation of an algorithm, and be confident that the test
actually validates the implementation.

To do so, I will first define the periodic-plus-smooth decomposition
as a minimiazation problem. This will lead to a first implementation
of this decomposition: the objective function is quadratic, and the
minimization problem therefore merely reduces to a linear
system. However, this system is large (the number of unknowns is the
number of pixels!). We will therefore use matrix-free techniques.

This first –quite inefficient– implementation will then serve as a
reference implementation of the decomposition, for testing
purposes. Indeed, Moisan showed that the minimization problem he
introduced could in fact be explicitely solved in Fourier space. He
proposed two efficient algorithms to compute the decomposition. Both
rely, of course, on the FFT. We will implement both, test them against
the reference implementation, and compare their merits.

That's a lot of work! So, without further ado, let's start introducing
this decomposition!
